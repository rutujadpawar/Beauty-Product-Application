// Generated by view binder compiler. Do not edit!
package com.example.aexpress.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aexpress.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuantityDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button minusBtn;

  @NonNull
  public final Button plusBtn;

  @NonNull
  public final TextView productName;

  @NonNull
  public final TextView productStock;

  @NonNull
  public final TextView quantity;

  @NonNull
  public final Button saveBtn;

  private QuantityDialogBinding(@NonNull ConstraintLayout rootView, @NonNull Button minusBtn,
      @NonNull Button plusBtn, @NonNull TextView productName, @NonNull TextView productStock,
      @NonNull TextView quantity, @NonNull Button saveBtn) {
    this.rootView = rootView;
    this.minusBtn = minusBtn;
    this.plusBtn = plusBtn;
    this.productName = productName;
    this.productStock = productStock;
    this.quantity = quantity;
    this.saveBtn = saveBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QuantityDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuantityDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.quantity_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuantityDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.minusBtn;
      Button minusBtn = ViewBindings.findChildViewById(rootView, id);
      if (minusBtn == null) {
        break missingId;
      }

      id = R.id.plusBtn;
      Button plusBtn = ViewBindings.findChildViewById(rootView, id);
      if (plusBtn == null) {
        break missingId;
      }

      id = R.id.productName;
      TextView productName = ViewBindings.findChildViewById(rootView, id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.productStock;
      TextView productStock = ViewBindings.findChildViewById(rootView, id);
      if (productStock == null) {
        break missingId;
      }

      id = R.id.quantity;
      TextView quantity = ViewBindings.findChildViewById(rootView, id);
      if (quantity == null) {
        break missingId;
      }

      id = R.id.saveBtn;
      Button saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      return new QuantityDialogBinding((ConstraintLayout) rootView, minusBtn, plusBtn, productName,
          productStock, quantity, saveBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
